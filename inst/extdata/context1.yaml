modules:
  NA handling: &NaHandling
    type: pipe
    Fill NAs:
      type: joint
      function: zoo::na.locf
      arguments:
        object: '@pipe'
    NA Ratio:
      type: warning
      function: NaRatio
      arguments:
        timeseries: '@pipe'
        variable: '@series'
        maxRatio: '@maxNaRatio'
  joint: &QYPipe
    type: pipe
    Cache:
      type: factory
      function: Cache
      arguments:
        f: '@pipefun'
        timeout: 3600
    GetSeries:
      type: joint
      function: magrittr::use_series
      arguments:
        a: '@pipe'
        b: '@series'
    NAs: *NaHandling
    Regularize:
        type: joint
        function: Regularize
        arguments:
          xts: '@pipe'
    Combine:
      type: junction
      function: Combine
      arguments:
        listofxts: '@pipe'
      Quandl:
        type: pipe
        MinLength:
          type: error
          function: MinLength
          arguments:
            timeseries: '@pipe'
            minLength: 10
        DownloadQuandl:
          type: joint
          function: Quandl::Quandl
          arguments:
            code: "@quandlCode"
            type: xts
      Yahoo:
        type: pipe
        MinLength:
          type: warning
          function: MinLength
          arguments:
            timeseries: '@pipe'
            minLength: 10
        SetNames:
          type: joint
          function: SetNames
          arguments:
            x: '@pipe'
            names: [Open, High, Low, Close, Volume, 'Adjusted Close']
          DownloadYahoo:
            type: joint
            function: quantmod::getSymbols
            arguments:
              Symbols: "@yahooSymbol"
              auto.assign: FALSE
## taps
Closing Prices:
  variables:
      series: Close
      maxNaRatioDefault: 0.25
  Indices:
    SPX:
      type: tap
      longname: "S&P 500 daily close"
      description: |
        Quandl, fill missing values with Yahoo.
        Backfill weekends and holidays.
        Cache for an hour.
        Warn if newest value older than a day.
      parameters:
        #parameterName: defaultArgument
        dteRange: 1990-01-01/2010-01-01
      variables:
        #variableName: value
        series: '@series'
        maxNaRatio: '@maxNaRatioDefault'
        yahooSymbol: "^GSPC"
        quandlCode: "YAHOO/INDEX_GSPC"
      Pipe:
        type: pipe
        DateRange:
          type: joint
          function: magrittr::extract
          arguments:
            - '@pipe'
            - '@dteRange'
        QYPipe: *QYPipe
  Single Stocks:
    AAPL:
      type: tap
      longname: "apple"
      description: |
        Quandl, fill missing values with Yahoo.
        Backfill weekends and holidays.
        Cache for an hour.
        Warn if newest value older than a day.
      variables:
        series: '@series'
        maxNaRatio: '@maxNaRatioDefault'
        yahooSymbol: "AAPL"
        quandlCode: "YAHOO/AAPL"
      pipe: *QYPipe
    MSFT:
      type: tap
      longname: "Microsoft"
      variables:
        series: '@series'
        maxNaRatio: 0.0
        yahooSymbol: "MSFT"
        quandlCode: "YAHOO/MSFT"
      pipe: *QYPipe
  Fabricated:
    variables:
      startDateDefault: 1990-01-01
    Ones:
      type: tap
      parameters:
        startDate: '@startDateDefault'
        endDate: '@Today()'
      GetOnes:
        type: joint
        function: Ones
        arguments:
          startDate: '@startDate'
          endDate: '@endDate'
          colname: '@series'
Technical Indicators:
  MATap:
    type: tap
    longname: "Moving Average"
    description: |
      This demonstrates how to create
      taps based on other taps
    parameters:
      tapPath:
      periods: 10
      ...:
    pipe:
      type: pipe
      SMA:
        type: joint
        function: TTR::SMA
        arguments:
          x: '@pipe'
          'n': '@periods'
      Tap:
        type: joint
        function: Tap
        arguments:
          context: '@context'
          tapPath: '@tapPath'
          ...: '@...'

  MA:
    type: tap
    longname: "Moving Average"
    description: |
      This demonstrates how to create
      taps without a data source. Use it
      as a function, with any xts as an
      input!
    parameters:
      series:
      periods: 10
    Transform:
      type: joint
      function: TTR::SMA
      arguments:
        x: '@series'
        'n': '@periods'


