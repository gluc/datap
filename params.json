{
  "name": "datap",
  "tagline": "da data tap & da data pipes",
  "body": "> “If I could do it all again, I'd be a plumber.”\r\n>\r\n> -- <cite>Albert Einstein</cite>\r\n\r\n## datap in 30 seconds\r\n\r\nDefine all your data needs for your R project in a single yaml file. Wherever the source. Whatever the format. \r\n\r\nUse the datap API to load your data into your R session.\r\n\r\nShare your datap contexts, add them to your source code repository, or keep various versions for development and production.\r\n\r\n## datap in 2 minutes\r\n\r\nWithin your datap context (i.e. the datap yaml file), you can\r\n\r\n1. define data processing **pipes**:\r\n    1. Where is your data coming from? (internet, file, db, memory, etc.)\r\n    2. How should your data be pre-processed? (cleaning, plausibility checking, missing value handling, etc.)\r\n2. define data **taps** by\r\n    1. giving short id's to your datasets\r\n    2. organising your datasets into hierarchies\r\n\r\nFor example, a (simple) datap context might look like this:\r\n\r\n```{YAML}\r\nstocks:\r\n  type: structure\r\n  Apple:\r\n    type: tap\r\n    download:\r\n      type: processor\r\n      function: Quandl::Quandl(code = 'YAHOO/AAPL', type = 'xts')\r\n  Tesla:\r\n    type: tap\r\n    download:\r\n      type: processor\r\n      function: Quandl::Quandl(code = 'YAHOO/TSLA', type = 'xts')\r\nindices:\r\n  type: structure\r\n  S&P500:\r\n    type: tap\r\n    download:\r\n      type: processor\r\n      function: quantmod::getSymbols(Symbols = '^GSPC', auto.assign = FALSE)\r\n```\r\nIt defines three taps (Apple, Tesla, and S&P500), and organises stocks and indices neatly in a hierarchical structure.\r\n\r\nSave this file in your project.\r\n\r\nOnce you defined your datap context, you can call your taps from R to load your data into an R session by accessing a single, consistent API. \r\n\r\n```{r}\r\nlibrary(datap)\r\nfilePath <- \"C:\\projects\\datap\\context.yaml\")\r\ncontext <- Load(filePath)\r\n```\r\n\r\nThe context looks like this:\r\n\r\n```{r}\r\ncontext\r\n```\r\n\r\n```\r\n##        levelName\r\n## 1 context       \r\n## 2  ¦--stocks    \r\n## 3  ¦   ¦--Apple \r\n## 4  ¦   °--Tesla \r\n## 5  °--indices   \r\n## 6      °--S&P500\r\n```\r\n\r\nAnd you can directly navigate to a tap to fetch the data:\r\n\r\n```{r}\r\nteslaBars <- context$stocks$Tesla$tap()\r\nhead(teslaBars)\r\n```\r\n\r\n```{yaml}\r\n##             Open  High   Low Close   Volume Adjusted Close\r\n## 2010-06-29 19.00 25.00 17.54 23.89 18766300          23.89\r\n## 2010-06-30 25.79 30.42 23.30 23.83 17187100          23.83\r\n## 2010-07-01 25.00 25.92 20.27 21.96  8218800          21.96\r\n## 2010-07-02 23.00 23.10 18.71 19.20  5139800          19.20\r\n## 2010-07-06 20.00 20.00 15.83 16.11  6866900          16.11\r\n## 2010-07-07 16.40 16.63 14.98 15.80  6921700          15.80\r\n```\r\n\r\nIf, at a later stage, you change your data source, or your pre-processing steps, the consuming code will not have to know.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}